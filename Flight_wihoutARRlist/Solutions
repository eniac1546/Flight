import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
 
public class Fli {
    public static void main(String[] args) {
    
        
        Flight[] flts = new Flight[7];
        
        Scanner sc = new Scanner(System.in);
        
        for(int i = 0;i<7;i++)
        {
            String FlightId = sc.nextLine();
            String Departure_From = sc.nextLine();
            String Arrival_To = sc.nextLine();
            double duration = sc.nextDouble();sc.nextLine();
            boolean Meal_available = sc.nextBoolean();sc.nextLine();
 
            flts[i] = new Flight(FlightId,Departure_From,Arrival_To,duration,Meal_available);
        }
        String dep_from = sc.nextLine();
        String arv_to = sc.nextLine();
        
        Flight[] FlightArray = SearchFlight(flts);
        
        System.out.println("Flight_ID Duration Meal_Available");
        for(Flight f : FlightArray)
        {
        System.out.println(f.FlightId+"       "+f.duration+"       "+f.Meal_available);
        }
        
        System.out.println("--------------------------------------------------------");
        
        System.out.println("Flight_ID Dep  Arv   Duration");
        
            
        Flight[] FltDetl = GetFlightDetails(flts,dep_from,arv_to);
 
        
        for(Flight f : FltDetl)
        {
        System.out.println(f.FlightId+"      "+f.getDeparture_From()+"  "+f.getArrival_To()+"    "+ f.getDuration());
        }
    }
    
    public static Flight[] SearchFlight(Flight[] F)
    {
        int c=0,k=0;
        //implement method
        for(int i=0;i<F.length;i++)
        {
            if(F[i].getDuration()>120 && F[i].isMeal_available())
            {
                c++;
            }
        }
        Flight[] r =new Flight[c];
        for(int i=0;i<F.length;i++)
        {
            if(F[i].getDuration()>120 && F[i].isMeal_available())
            {
                r[k]=F[i];
                k++;
            }
        }
        return r;
    }
    
    public static Flight[] GetFlightDetails(Flight[] f,String dep,String arv)
    {
        //implement method 
        int c=0,k=0;
       // Flight[] temp=null;
        for(int i=0;i<f.length;i++)
        {
            if(f[i].getDeparture_From().equalsIgnoreCase(dep) && f[i].getArrival_To().equalsIgnoreCase(arv))
            {
                c++;
            }
             
        }
        Flight[] a=new Flight[c];
        for(int i=0;i<f.length;i++)
        {
            if(f[i].getDeparture_From().equalsIgnoreCase(dep) && f[i].getArrival_To().equalsIgnoreCase(arv))
            {   
                a[k]=f[i];
                k++;
            }
 
             
        }
        for(i=0;i<a.length;i++)
        {
                for(int j=0;j<a.length-i-1;j++)
        {
            if(a[j].getDuration()>a[j+1].getDuration())
            {
            
             Flight temp=a[j];
                a[j] = a[j+1];
                a[j+1] = temp;
            }
        }
        }
        return a;
   
    }
 
 
 
}
 
class Flight
{
    String FlightId;
    String Departure_From;
    String Arrival_To;
    double duration;
    boolean Meal_available;
    public Flight(String flightId, String departure_From, String arrival_To, double duration, boolean meal_available) {
        super();
        this.FlightId = flightId;
        this.Departure_From = departure_From;
        this.Arrival_To = arrival_To;
        this.duration = duration;
        this.Meal_available = meal_available;
        
    }
    public String getFlightId() {
        return FlightId;
    }
    public void setFlightId(String flightId) {
        FlightId = flightId;
    }
    public String getDeparture_From() {
        return Departure_From;
    }
    public void setDeparture_From(String departure_From) {
        Departure_From = departure_From;
    }
    public String getArrival_To() {
        return Arrival_To;
    }
    public void setArrival_To(String arrival_To) {
        Arrival_To = arrival_To;
    }
    public double getDuration() {
        return duration;
    }
    public void setDuration(double duration) {
        this.duration = duration;
    }
    public boolean isMeal_available() {
        return Meal_available;
    }
    public void setMeal_available(boolean meal_available) {
        Meal_available = meal_available;
    }
}
